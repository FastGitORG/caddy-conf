# 此处已经合并了两种下载类型
https://download.fastgit.org, https://archive.fastgit.org {
	encode gzip zstd
	tls {$CUR_WORK_DIR}/certs/fastgit.org/fullchain.cer {$CUR_WORK_DIR}/certs/fastgit.org/fastgit.org.key

	# 拦截搜索引擎
	import block-search-engine-by-ua

	# 针对 release 的下载
	@download_releases {
		host download.fastgit.org
		path_regexp ^/[^/]+/[^/]+/releases(/latest)?/download/
	}
	handle @download_releases {
		reverse_proxy * https://github.com {
			# 设定两个请求头
			header_up Host "github.com"
			header_up Accept-Encoding ""
			header_down Location githubusercontent.com fastgit.org
		}
		filter {
			search_pattern githubusercontent.com
			replacement fastgit.org
			content_type .*text/html.*
		}
	}

	# 针对 suites 的下载
	@download_suites {
		host download.fastgit.org
		path_regexp ^/[^/]+/[^/]+/suites/[^/]+/artifacts/
	}
	handle @download_suites {
		reverse_proxy * https://github.com {
			# 设定两个请求头
			header_up Host "github.com"
			header_up Accept-Encoding ""
			header_down Location githubusercontent.com fastgit.org
			# 回传时隐藏头
			import proxy-hide-headers
		}
		filter {
			search_pattern githubusercontent.com
			replacement fastgit.org
			content_type .*text/html.*
		}
	}

	# 针对 archive 的下载
	@download_archive {
		host archive.fastgit.org
		path_regexp ^/[^/]+/[^/]+/archive/
	}
	handle @download_archive {
		# redir https://download.fastgit.org{uri} permanent
		reverse_proxy * https://github.com {
			# 设定两个请求头
			header_up Host "github.com"
			header_up Accept-Encoding ""
			# 回传时隐藏头
			import proxy-hide-headers
		}
		filter {
			search_pattern githubusercontent.com
			replacement fastgit.org
			content_type .*text/html.*
		}
	}

	# TODO: 处理重定向部分

	# 继续其他内容不响应
	handle * {
		respond * "" 403 {
			close
		}
	}

	import block-root-dir
	import site-log download.fastgit.org
}
